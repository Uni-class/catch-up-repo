name: Build-test

on:
  pull_request:
    branches: [dev]

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Set Yarn version
        run: corepack prepare yarn@4.3.1 --activate

      - name: Install dependencies
        run: yarn install
        env:
          YARN_ENABLE_IMMUTABLE_INSTALLS: false


      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Upload node_modules
        uses: actions/upload-artifact@v2
        with:
          name: node_modules
          path: node_modules

  build-front-end:
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"
          cache: 'yarn'

      - name: Download node_modules
        uses: actions/download-artifact@v2
        with:
          name: node_modules
          path: node_modules

      - name: Build front-end
        run: yarn front-end run build

  build-api-server:
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"
          cache: 'yarn'

      - name: Download node_modules
        uses: actions/download-artifact@v2
        with:
          name: node_modules
          path: node_modules

      - name: Build api-server
        run: yarn api-server run build
